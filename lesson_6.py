a = [[12,321,354,0,234,234],
     [234,46,45,8975,7,2],
     [88,46,465,6878,1,2],
     [14, 532,1,928,-80,2],
     [243,678679,-1,345,354534,54354]]

# Дан двумерный массив размером 3x3. 
# Определить максимальное значение среди элементов третьего столбца массива; максимальное значение среди элементов второй строки массива. Вывести полученные значения.
n = 5
a = [[1,22,3],[4234675567,53262,62345678],[7,8,9]]
max3 = []
max1 = []
for i in range(n):
    for j in range(n):
        if i == 1:
            max1.append(a[i][j])
        if j == 2:
            max3.append(a[i][j])
print(f'аксимальное значение среди элементов третьего столбца: {max(max3)}')
print(f'максимальное значение среди элементов второй строки: {max(max1)}')
            

#Дан двумерный массив размером mxn. Сформировать новый массив заменив положительные элементы единицами, а отрицательные нулями. Вывести оба массива.
a1 = [[1,-9,123],[14,-6234,1],[13213,2,-2345]]

a2 = list()

for i in range(len(a1)):
    r = []
    for j in range(len(a1[i])):

        if a1[i][j] > 0:
            r.append(1)
        
        else:
            r.append(0)
    a2.append(r)

print(a1,a2)

# Дана целая квадратная матрица n-го порядка. Определить, является ли она магическим квадратом, т. е. такой матрицей, в которой суммы элементов во всех строках
#  и столбцах одинаковы.

a = [[2,7,6],[9,5,1],[4,3,8]]
sums = []

for i in range(len(a)):
    sums.append(sum(a[i]))

for j in range(len(a[i])):
    i += 1
    if i == 3:
        break
    sums.append[sum(a[i][j])] 

print(sums)

if len(set(sums)) == 1:
    print("MAGIC")


# Определить, является ли заданная целая квадратная матрица n-го порядка симметричной (относительно главной диагонали).
a = [[2, 2, 2], [2, 2, 2], [2, 2, 2]]
s = []
for i in range(len(a)):
    for j in range(len(a[i])):
        if i != j:
            if a[i][j] == a[j][i]:
                s.append(1)
            else:
                s.append(0)

print(s)
if 0 in s:
    print('Матрица несимметрична')
else:
    print('Матрица симметрична ')

# Дана прямоугольная матрица. Найти строку с наибольшей и строку с наименьшей суммой элементов. 
# Вывести на печать найденные строки и суммы их элементов.



max_a = []
min_a = []
sum_a = []

for i in range(len(a)):
    sum_a.append(sum(a[i]))
print(sum_a)

min_a = min(sum_a)
max_a = max(sum_a)

index_min = sum_a.index(min_a)
index_max = sum_a.index(max_a)

print(f'min_a:{min_a},\tmax_a:{max_a}')
print(f'min:{a[index_min]},\tmax:{a[index_max]}')

# Дана действительная матрица размером n х m, все элементы которой различны. В каждой строке выбирается элемент с наименьшим значением.
#  Если число четное, то заменяется нулем, нечетное - единицей. Вывести на экран новую матрицу.

for i in range(len(a)):
    min_value = min(a[i])
    
    # Находим индекс минимального элемента в текущей строке
    index_min = a[i].index(min_value)
    
    # Проверяем, четен ли минимальный элемент
    if min_value % 2 == 0:
        a[i][index_min] = 0
    else:
        a[i][index_min] = 1

print(a)